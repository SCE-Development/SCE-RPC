# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import led_sign_pb2 as led__sign__pb2


class LedSignStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.HealthCheck = channel.unary_unary(
        '/LedSign/HealthCheck',
        request_serializer=led__sign__pb2.HealthCheckRequest.SerializeToString,
        response_deserializer=led__sign__pb2.HealthCheckResponse.FromString,
        )
    self.UpdateSignText = channel.unary_unary(
        '/LedSign/UpdateSignText',
        request_serializer=led__sign__pb2.LedSignRequest.SerializeToString,
        response_deserializer=led__sign__pb2.LedSignResponse.FromString,
        )


class LedSignServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def HealthCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSignText(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LedSignServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'HealthCheck': grpc.unary_unary_rpc_method_handler(
          servicer.HealthCheck,
          request_deserializer=led__sign__pb2.HealthCheckRequest.FromString,
          response_serializer=led__sign__pb2.HealthCheckResponse.SerializeToString,
      ),
      'UpdateSignText': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSignText,
          request_deserializer=led__sign__pb2.LedSignRequest.FromString,
          response_serializer=led__sign__pb2.LedSignResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'LedSign', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
